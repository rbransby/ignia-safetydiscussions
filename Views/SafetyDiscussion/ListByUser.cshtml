@model int

<link rel="import" href="~/lib/polymer/polymer.html">
<link rel="import" href="~/lib/paper-item/paper-item.html">
<link rel="import" href="~/lib/iron-ajax/iron-ajax.html">
<link rel="import" href="~/lib/paper-material/paper-material.html">
<link rel="import" href="~/lib/paper-fab/paper-fab.html">
<link rel="import" href="~/lib/iron-icons/iron-icons.html">
<link rel="import" href="~/lib/paper-input/paper-input.html">
<link rel="import" href="~/lib/paper-spinner/paper-spinner.html">
<link rel="import" href="~/lib/paper-input/paper-textarea.html">
<link rel="import" href="~/lib/paper-dialog/paper-dialog.html">
<link rel="import" href="~/lib/paper-dropdown-menu/paper-dropdown-menu.html">
<link rel="import" href="~/lib/paper-listbox/paper-listbox.html">
<link rel="import" href="~/lib/paper-button/paper-button.html">
<link rel="import" href="~/lib/neon-animation/animations/scale-up-animation.html">
<link rel="import" href="~/lib/neon-animation/animations/fade-out-animation.html"> 

<style>
	.title {
		margin-left: 10px;
		vertical-align: middle;
		display: inline-block;
		flex: 8;
		align-self: center;
	}
	
	.cardContents {
		margin-left: 10px;
		margin-right: 10px;
		display: flex;
		flex-direction: row;
		max-width: 100%;
		height: 100%;
	}
	
	.content {
		margin-top: 5px;
		margin-bottom: 5px;
	}
	
	.names {
		font-size: 0.8em;
		text-transform: uppercase;
		white-space: nowrap;
		color: #212121;
	}
	
	.card {
		margin: 5px 0 5px 0;
	}
	
	.list {
		width: 760px;
		padding: 5px;
	}
	
	#addDiscussionDialog {
		min-width: 100vh;
		min-height: 40vh;		
	}
	
	.form-field {
		margin-top: 20px;
	}
	
	paper-dialog .buttons paper-button {
		margin: 10px;
	}

	.dialogItem {
		margin:0;
	}
</style>

<template id="app" is="dom-bind">
	<iron-ajax url="/api/user" last-response="{{users}}" on-response="handleUserResponse" auto>
	</iron-ajax>
	<iron-ajax url="/api/safetydiscussion/GetByObserver/@(Model == 0 ? "" : Model.ToString())" last-response="{{discussions}}" on-response="handleResponse" auto>
	</iron-ajax>
    <iron-ajax
        id="postSafetyDiscussionAjax"
        url="/api/safetydiscussion"
        handle-as="json"
        content-type="application/json"
        method="POST"        
        on-response="postResponse"
        debounce-duration="3000">
    </iron-ajax>
    <paper-spinner hidden$="{{!shouldShowSpinner}}" id="spinner" active></paper-spinner>
    <div hidden$="{{!shouldShowNoItemsMessage}}" id="noItemsMessage">No safety discussions for this user</div>
	<div class="list">
		<template is="dom-repeat" items="{{discussions}}">
			<paper-material id$="{{item.id}}" class="card">
				<div class="cardContents">
					<span class$="icon"></span>
					<span class="title">
                  <p class="date">{{formatDate(item.date)}}</p>                  
                  <p class="content names"><strong>{{item.observer.displayName}}</strong> observed <strong>{{item.colleague.displayName}}</strong></p>
                  <p class="subject"><strong>{{item.subject}}</strong></p>
                  <p class="outcomes">{{item.outcomes}}</p>
                </span>
				</div>
			</paper-material>
		</template>
		<paper-fab on-tap="onAddButtonTapped" icon="add" id="addButton"></paper-fab>
	</div>
	<paper-dialog id="addDiscussionDialog" entry-animation="scale-up-animation" exit-animation="fade-out-animation"
		on-iron-overlay-closed="onAddDialogClosed">		
		<h2>Add Safety Discussion</h2>
		<paper-dropdown-menu id="selectedObserverDropdown" class="dialogItem" selected-item="{{selectedObserver}}" label="Observer">
			<paper-listbox selected={{selectedObserverValue}} attr-for-selected="id" class="dropdown-content">
				<template is="dom-repeat" items="{{users}}">
					<paper-item id$="{{item.id}}">{{item.displayName}}</paper-item>
				</template>
			</paper-listbox>
		</paper-dropdown-menu>

		<div class="dialogItem">
			<label for="date">Date of observation</label>
			<input id="dateInput" is="iron-input" value$="{{dateValue}}" type="date"></input>
		</div>
		<paper-input class="dialogItem" id="locationInput" value="{{locationValue}}" type="text" label="Location"></paper-input>
		<paper-dropdown-menu class="dialogItem" selected-item={{selectedColleague}} label="Colleague observed">
			<paper-listbox class="dropdown-content">
				<template is="dom-repeat" items="{{users}}">
					<paper-item id$="{{item.id}}">{{item.displayName}}</paper-item>
				</template>
			</paper-listbox>
		</paper-dropdown-menu>

		<paper-input class="dialogItem" id="subjectInput" type="text" value="{{subjectValue}}" label="Subject"></paper-input>
		<paper-textarea class="dialogItem" id="outcomesInput" type="text" value="{{outcomesValue}}" label="Outcomes" rows="5"></paper-textarea>

		<div class="buttons">
			<paper-button dialog-dismiss>Cancel</paper-button>
			<paper-button on-tap="saveButtonTapped">Save</paper-button>
		</div>
	</paper-dialog>
</template>

<script>
    "use strict";
    let app = document.getElementById('app');
    app.addEventListener('dom-change', () => {
        app.shouldShowNoItemsMessage = false;
        app.shouldShowSpinner = true;        
    });

    app.formatDate = (rawDateString) => {
        return moment(rawDateString).format('MMMM Do YYYY');
    };

    app.onAddButtonTapped = (e) => {
        let dialog = app.$.addDiscussionDialog;
        dialog.open();
    };    

    app.handleResponse = (data) => {
        app.shouldShowSpinner = false;
        if (data.detail.response.length == 0)
        {
            app.shouldShowNoItemsMessage = true;
        }        
    };

    app.handleUserResponse = (data) => {
        let dialogObserverDropdown = app.$.selectedObserverDropdown;
        app.currentUser = app.users.filter((user) => (user.id == @Model))[0]
        app.selectedObserverValue = app.currentUser.id;
    };

    app.saveButtonTapped = (e) => {
        let dateInputElement = app.$.dateInput;
        let newDiscussion = { 
            observeruserid : app.selectedObserver.id,
            date: dateInputElement.value,
            location: app.locationValue,
            colleagueuserid: app.selectedColleague.id,
            subject: app.subjectValue,
            outcomes: app.outcomesValue
        }

        let ajaxPostElement = app.$.postSafetyDiscussionAjax;
        ajaxPostElement.body = newDiscussion;
        ajaxPostElement.generateRequest();
    };

    app.postResponse = (e) => {        
		app.push('discussions', e.detail.response);
        app.shouldShowNoItemsMessage = false;        
    };
    
</script>